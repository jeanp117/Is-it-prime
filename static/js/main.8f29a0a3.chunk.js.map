{"version":3,"sources":["functions.ts","screens/game.screen.tsx","screens/gameOver.screen.tsx","screens/start.screen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["playAudio","url","audioFile","Audio","volume","play","catch","console","error","randomNumbersBetween","a","b","evenprobability","number","Math","floor","random","canBeEven","GameScreen","record","onGameOver","useState","setNumber","score","setScore","remainingSeconds","setRemainingSeconds","level","setLevel","lifes","setLifes","useEffect","interval","setInterval","prev","clearInterval","responseHandler","prime","num","i","isPrime","className","style","color","Array","fill","visibility","onClick","GameOverScreen","onPlay","StartScreen","id","href","Jokes","maxWidth","jokes","length","SquareButton","children","background","App","started","setStarted","gameOver","setGameOver","lastScore","setLastScore","parseInt","JSON","parse","localStorage","getItem","setRecord","playHandler","textAlign","setItem","stringify","recordHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f29a0a3.chunk.js","sourcesContent":["export const playAudio =  (url: string) => {\r\n  var audioFile = new Audio(url);\r\n  audioFile.volume = 0.0\r\n   audioFile.play().catch(console.error);\r\n};\r\n\r\nexport const isPrime = (num: number) => {\r\n  for (let i = 2; i < num; i++) if (num % i === 0) return false;\r\n  return num > 1;\r\n};\r\n\r\nexport const randomNumbersBetween = (a: number, b: number, evenprobability:number = 20) =>\r\n{\r\n  let number = Math.floor(Math.random() * b) + a\r\n  let canBeEven = Math.floor(Math.random()*100)<=evenprobability \r\n  return  number === 2 || number === 0 || (number%2 || canBeEven)?number:number+1\r\n}\r\n\r\nexport const primesBetween = (a: number, b: number) => {\r\n  var sieve = [],\r\n    i,\r\n    j,\r\n    primes = [];\r\n  for (i = a || 2; i <= b; ++i) {\r\n    if (!sieve[i]) {\r\n      primes.push(i);\r\n      for (j = i << 1; j <= b; j += i) {\r\n        sieve[j] = true;\r\n      }\r\n    }\r\n  }\r\n  return primes;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SquareButton } from \"../App\";\r\nimport { playAudio, randomNumbersBetween, isPrime } from \"../functions\";\r\n\r\nexport const GameScreen: React.FC<{ record: number; onGameOver: any }> = ({\r\n  record,\r\n  onGameOver,\r\n}) => {\r\n  const [number, setNumber] = useState(2);\r\n  const [score, setScore] = useState(0);\r\n  const [remainingSeconds, setRemainingSeconds] = useState(10);\r\n  const [level, setLevel] = useState(1);\r\n  const [lifes, setLifes] = useState(3);\r\n\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setRemainingSeconds((prev) => prev - 1);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (lifes===0) onGameOver(score);\r\n  }, [lifes,score,onGameOver]);\r\n\r\n  useEffect(() => {\r\n    if (remainingSeconds <= 5) playAudio(\"./audio/time.mp3\");\r\n    if (remainingSeconds <= 0) onGameOver(score);\r\n  }, [remainingSeconds,score,onGameOver]);\r\n\r\n  const newNumber = () => {\r\n    return randomNumbersBetween(25 * (level - 1), 25 * level, 33-level*1.25);\r\n  };\r\n\r\n  const responseHandler =  (prime: boolean) => {\r\n    if (isPrime(number) === prime) {\r\n      setScore((prev) => prev + 1);\r\n      if ((score + 1) % (10 + level) === 0) setLevel((prev) => prev + 1);\r\n      setNumber(newNumber());\r\n      setRemainingSeconds((prev) => prev + 2);\r\n    } else {\r\n      playAudio(\"./audio/time.mp3\");\r\n      setLifes((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1\r\n        className={\r\n          `${remainingSeconds <= 5 ? \"pulse \" : \"\"}` + \"countdown shadow\"\r\n        }\r\n      >\r\n        {remainingSeconds}\r\n      </h1>\r\n      <h1 className=\"score shadow\">Lvl. {level}</h1>\r\n      <h1 className=\"score shadow\">{score} points</h1>\r\n\r\n      {lifes && (\r\n        <h1\r\n          className={`score shadow ${lifes === 1 ? \"pulse\" : \"\"} `}\r\n          style={{ color: \"red\" }}\r\n        >\r\n          {new Array(lifes).fill(\"♥ \")}\r\n        </h1>\r\n      )}\r\n\r\n      <h1\r\n        className=\"score shadow pulse record\"\r\n        style={{\r\n          visibility: score > 0 && score > record ? \"visible\" : \"hidden\",\r\n        }}\r\n      >\r\n        New Record!\r\n      </h1>\r\n\r\n      <h1 className=\"number shadow\">{number}</h1>\r\n      <h2 className=\"subtitle shadow\">Is it prime?</h2>\r\n      <div className=\"buttonContainer\">\r\n        <SquareButton color=\"#EB5757\" onClick={() => responseHandler(false)}>\r\n          X\r\n        </SquareButton>\r\n        <SquareButton color=\"#6FCF97\" onClick={() => responseHandler(true)}>\r\n          ✓\r\n        </SquareButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Jokes, SquareButton } from \"../App\";\r\n\r\nexport const GameOverScreen: React.FC<{\r\n    score: number;\r\n    record: number;\r\n    onPlay: any;\r\n  }> = ({ score, record, onPlay }) => {\r\n    return (\r\n      <>\r\n        <h1 className=\"title shadow\">Game over</h1>\r\n  \r\n        {score === record ? (\r\n          <h3 className=\"shadow score max\">New record: {record} points</h3>\r\n        ) : (\r\n          <>\r\n            <h3 className=\"shadow score max\">{score} points</h3>\r\n            <h3 className=\"shadow score max\">Record: {record} points</h3>\r\n          </>\r\n        )}\r\n  \r\n        <Jokes />\r\n        <div className=\"buttonContainer\">\r\n          <SquareButton\r\n            color=\"#6FCF97\"\r\n            onClick={onPlay}\r\n          >\r\n            ▶\r\n          </SquareButton>\r\n        </div>\r\n      </>\r\n    );\r\n  };","import React from \"react\";\r\nimport { Jokes, SquareButton } from \"../App\";\r\n\r\nexport const StartScreen: React.FC<{ score: number; onPlay: any }> = ({\r\n  score,\r\n  onPlay,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"title shadow\">Is it prime?</h1>\r\n\r\n      <Jokes />\r\n      {score > 0 && <h3 className=\"shadow score max\">record: {score} </h3>}\r\n\r\n      <div className=\"buttonContainer\" id=\"play\">\r\n        <SquareButton\r\n        \r\n          color=\"#6FCF97\"\r\n          onClick={onPlay}\r\n        >\r\n          ▶&#xFE0E;\r\n        </SquareButton>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <a\r\n          href=\"https://github.com/jeanp117/Is-it-prime\"\r\n          className=\"shadow\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          GitHub\r\n        </a>\r\n        <a\r\n          href=\"https://www.buymeacoffee.com/jeanpr117\"\r\n          className=\"shadow\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          Buy me a coffee\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, {  useState } from \"react\";\nimport \"./App.scss\";\nimport { playAudio, randomNumbersBetween } from \"./functions\";\nimport { jokes } from \"./jokes.json\";\nimport { GameScreen } from \"./screens/game.screen\";\nimport { GameOverScreen } from \"./screens/gameOver.screen\";\nimport { StartScreen } from \"./screens/start.screen\";\n\n\nfunction App() {\n\n\n \n\n  const [started, setStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [lastScore, setLastScore] = useState(0);\n  const [record, setRecord] = useState(\n    parseInt(JSON.parse(localStorage.getItem(\"record\") + \"\")) || 0\n  );\n\n  const playHandler = () => {\n    setStarted(true);\n  };\n\n  const recordHandler = (score: number) => {\n    setRecord(score);\n    localStorage.setItem(\"record\", JSON.stringify(score));\n  };\n  const gameOverHandler = (score: number) => {\n    setGameOver(true);\n    setStarted(false);\n    setLastScore(score);\n\n    if (score > record) {\n      recordHandler(score);\n      playAudio(\"./audio/max score.mp3\");\n    } else {\n      playAudio(\"./audio/game over.mp3\");\n    }\n  };\n  return (\n    <div className=\" gameContainer\" style={{ textAlign: \"center\" }}>\n      {started ? (\n        <GameScreen record={record} onGameOver={gameOverHandler} />\n      ) : gameOver ? (\n        <GameOverScreen\n          score={lastScore}\n          record={record}\n          onPlay={playHandler}\n        />\n      ) : (\n        <StartScreen score={lastScore} onPlay={playHandler} />\n      )}\n    </div>\n  );\n}\n\nexport const Jokes = () => (\n  <>\n    {\" \"}\n    <p className=\"subtitle shadow\" style={{ maxWidth: \"100vh\" }}>\n      {\" \"}\n      {jokes[randomNumbersBetween(0, jokes.length)]}\n    </p>\n    <a\n      href=\"https://github.com/jeanp117/Is-it-prime\"\n      className=\"shadow\"\n      style={{ color: \"white\" }}\n    >\n      commit your math joke\n    </a>\n  </>\n);\n\n\n\n\n\nexport  const SquareButton: React.FC<{\n  onClick: any;\n  color: string;\n  children: any;\n}> = ({ onClick, color, children }) => {\n  return (\n    <button\n      className=\"squareButton\"\n      onClick={onClick}\n      style={{ background: color }}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}