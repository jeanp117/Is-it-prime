{"version":3,"sources":["functions.ts","screens/game.screen.tsx","screens/gameOver.screen.tsx","screens/start.screen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["playAudio","url","Audio","play","randomNumbersBetween","a","b","Math","floor","random","GameScreen","record","onGameOver","useState","number","setNumber","score","setScore","remainingSeconds","setRemainingSeconds","level","setLevel","lifes","setLifes","useEffect","interval","setInterval","prev","clearInterval","responseHandler","prime","num","i","isPrime","className","style","color","Array","fill","onClick","GameOverScreen","onPlay","document","documentElement","requestFullscreen","StartScreen","id","href","Jokes","maxWidth","jokes","length","SquareButton","children","background","App","started","setStarted","gameOver","setGameOver","lastScore","setLastScore","parseInt","JSON","parse","localStorage","getItem","setRecord","playHandler","textAlign","setItem","stringify","recordHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34463d7d.chunk.js","sourcesContent":["export const playAudio = (url: string) => {\r\n  var audioFile = new Audio(url);\r\n  audioFile.play();\r\n};\r\n\r\nexport const isPrime = (num: number) => {\r\n  for (let i = 2; i < num; i++) if (num % i === 0) return false;\r\n  return num > 1;\r\n};\r\n\r\nexport const randomNumbersBetween = (a: number, b: number) =>\r\n  Math.floor(Math.random() * b) + a;\r\n\r\nexport const primesBetween = (a: number, b: number) => {\r\n  var sieve = [],\r\n    i,\r\n    j,\r\n    primes = [];\r\n  for (i = a || 2; i <= b; ++i) {\r\n    if (!sieve[i]) {\r\n      primes.push(i);\r\n      for (j = i << 1; j <= b; j += i) {\r\n        sieve[j] = true;\r\n      }\r\n    }\r\n  }\r\n  return primes;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { SquareButton } from \"../App\";\r\nimport { playAudio, randomNumbersBetween, isPrime } from \"../functions\";\r\n\r\n\r\nexport const GameScreen: React.FC<{ record: number; onGameOver: any }> = ({\r\n    record,\r\n    onGameOver,\r\n  }) => {\r\n    const [number, setNumber] = useState(2);\r\n    const [score, setScore] = useState(0);\r\n    const [remainingSeconds, setRemainingSeconds] = useState(10);\r\n    const [level, setLevel] = useState(1);\r\n    const [lifes,setLifes]=useState(3)\r\n  \r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        setRemainingSeconds((prev) => prev - 1);\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      if(lifes==0)onGameOver(score)\r\n      }, [lifes]);\r\n\r\n    useEffect(() => {\r\n      if (remainingSeconds <= 5) playAudio(\"./audio/time.mp3\");\r\n      if (remainingSeconds <= 0) onGameOver(score);\r\n    }, [remainingSeconds]);\r\n  \r\n    const newNumber = () => {\r\n      return randomNumbersBetween(25 * (level - 1), 25 * level);\r\n    };\r\n  \r\n    const responseHandler = (prime: boolean) => {\r\n      if (isPrime(number) === prime) {\r\n        setScore((prev) => prev + 1);\r\n        if ((score + 1) % (10 + level) === 0) setLevel((prev) => prev + 1);\r\n        setNumber(newNumber());\r\n        setRemainingSeconds((prev) => prev + 2);\r\n      } else {\r\n        playAudio(\"./audio/time.mp3\")\r\n        setLifes(prev=>prev-1)\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <h1\r\n          className={\r\n            `${remainingSeconds <= 5 ? \"pulse \" : \"\"}` + \"countdown shadow\"\r\n          }\r\n        >\r\n           {remainingSeconds}\r\n        </h1>\r\n        <h1 className=\"score shadow\">Lvl. {level}</h1>\r\n        <h1 className=\"score shadow\">{score} points</h1>\r\n  \r\n        {lifes &&  (\r\n          <h1 className={`score shadow ${lifes===1?'pulse':''} `} style={{color:'red'}}>{new Array(lifes).fill('♥ ')}</h1>\r\n        )}\r\n\r\n        {score >0 && score > record && (\r\n          <h1 className=\"score shadow pulse record\">New Record!</h1>\r\n        )}\r\n        <h1 className=\"number shadow\">{number}</h1>\r\n        <h2 className=\"subtitle shadow\">Is it prime?</h2>\r\n        <div className=\"buttonContainer\">\r\n          <SquareButton color=\"#EB5757\" onClick={() => responseHandler(false)}>\r\n            X\r\n          </SquareButton>\r\n          <SquareButton color=\"#6FCF97\" onClick={() => responseHandler(true)}>\r\n            ✓\r\n          </SquareButton>\r\n        </div>\r\n      </>\r\n    );\r\n  };","import React from \"react\";\r\nimport { Jokes, SquareButton } from \"../App\";\r\n\r\nexport const GameOverScreen: React.FC<{\r\n    score: number;\r\n    record: number;\r\n    onPlay: any;\r\n  }> = ({ score, record, onPlay }) => {\r\n    return (\r\n      <>\r\n        <h1 className=\"title shadow\">Game over</h1>\r\n  \r\n        {score === record ? (\r\n          <h3 className=\"shadow score max\">New record: {record} points</h3>\r\n        ) : (\r\n          <>\r\n            <h3 className=\"shadow score max\">{score} points</h3>\r\n            <h3 className=\"shadow score max\">Record: {record} points</h3>\r\n          </>\r\n        )}\r\n  \r\n        <Jokes />\r\n        <div className=\"buttonContainer\">\r\n          <SquareButton\r\n            color=\"#6FCF97\"\r\n            onClick={() => {\r\n              onPlay();\r\n              document.documentElement.requestFullscreen();\r\n            }}\r\n          >\r\n            ▶\r\n          </SquareButton>\r\n        </div>\r\n      </>\r\n    );\r\n  };","import React from \"react\";\r\nimport { Jokes, SquareButton } from \"../App\";\r\n\r\nexport const StartScreen: React.FC<{ score: number; onPlay: any }> = ({\r\n  score,\r\n  onPlay,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"title shadow\">Is it prime?</h1>\r\n\r\n      <Jokes />\r\n      {score > 0 && <h3 className=\"shadow score max\">record: {score} </h3>}\r\n\r\n      <div className=\"buttonContainer\" id=\"play\">\r\n        <SquareButton\r\n        \r\n          color=\"#6FCF97\"\r\n          onClick={() => {\r\n            onPlay();\r\n            document.documentElement.requestFullscreen();\r\n          }}\r\n        >\r\n          ▶&#xFE0E;\r\n        </SquareButton>\r\n      </div>\r\n      <div className=\"buttonContainer\">\r\n        <a\r\n          href=\"https://github.com/jeanp117/Is-it-prime\"\r\n          className=\"shadow\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          GitHub\r\n        </a>\r\n        <a\r\n          href=\"https://www.buymeacoffee.com/jeanpr117\"\r\n          className=\"shadow\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          Buy me a coffee\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport { playAudio, randomNumbersBetween } from \"./functions\";\nimport { jokes } from \"./jokes.json\";\nimport { GameScreen } from \"./screens/game.screen\";\nimport { GameOverScreen } from \"./screens/gameOver.screen\";\nimport { StartScreen } from \"./screens/start.screen\";\n\n\nfunction App() {\n\n\n \n\n  const [started, setStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [lastScore, setLastScore] = useState(0);\n  const [record, setRecord] = useState(\n    parseInt(JSON.parse(localStorage.getItem(\"record\") + \"\")) || 0\n  );\n\n  const playHandler = () => {\n    setStarted(true);\n  };\n\n  const recordHandler = (score: number) => {\n    setRecord(score);\n    localStorage.setItem(\"record\", JSON.stringify(score));\n  };\n  const gameOverHandler = (score: number) => {\n    setGameOver(true);\n    setStarted(false);\n    setLastScore(score);\n\n    if (score > record) {\n      recordHandler(score);\n      playAudio(\"./audio/max score.mp3\");\n    } else {\n      playAudio(\"./audio/game over.mp3\");\n    }\n  };\n  return (\n    <div className=\" gameContainer\" style={{ textAlign: \"center\" }}>\n      {started ? (\n        <GameScreen record={record} onGameOver={gameOverHandler} />\n      ) : gameOver ? (\n        <GameOverScreen\n          score={lastScore}\n          record={record}\n          onPlay={playHandler}\n        />\n      ) : (\n        <StartScreen score={lastScore} onPlay={playHandler} />\n      )}\n    </div>\n  );\n}\n\nexport const Jokes = () => (\n  <>\n    {\" \"}\n    <p className=\"subtitle shadow\" style={{ maxWidth: \"100vh\" }}>\n      {\" \"}\n      {jokes[randomNumbersBetween(0, jokes.length)]}\n    </p>\n    <a\n      href=\"https://github.com/jeanp117/Is-it-prime\"\n      className=\"shadow\"\n      style={{ color: \"white\" }}\n    >\n      commit your math joke\n    </a>\n  </>\n);\n\n\n\n\n\nexport  const SquareButton: React.FC<{\n  onClick: any;\n  color: string;\n  children: any;\n}> = ({ onClick, color, children }) => {\n  return (\n    <button\n      className=\"squareButton\"\n      onClick={onClick}\n      style={{ background: color }}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}